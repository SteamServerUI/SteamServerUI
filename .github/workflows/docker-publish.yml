name: Build and Publish Docker Image

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract version from .version file
        id: extract_version
        run: |
          if [ -f "./build/.version" ]; then
            VERSION=$(cat ./build/.version)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Extracted version: $VERSION"
          else
            echo "No .version file found in ./build/ directory, falling back to config.go"
            VERSION=$(grep 'Version = "[0-9]*\.[0-9]*\.[0-9]*"' src/config/config.go | sed 's/.*Version = "\(.*\)".*/\1/')
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Extracted version: $VERSION"
          fi

  publish-nightly:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (nightly)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            steamserverui/steamserverui:nightly
            steamserverui/steamserverui:${{ needs.build.outputs.version }}-nightly

      - name: Log out from Docker Hub
        run: docker logout

  publish-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (release)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            steamserverui/steamserverui:latest
            steamserverui/steamserverui:${{ needs.build.outputs.version }}

      - name: Log out from Docker Hub
        run: docker logout